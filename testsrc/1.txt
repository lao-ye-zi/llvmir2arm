	.text
	.type	a,%object
	.globl	a
a:
	.long	0
	.size	a, 4

	.globl	@func
	.type	@func,%function
	.code	32
@func:

	.fnstart
.label_entry:
	sub sp, sp ,#8
	str r0, [sp, #4]
	ldr r0, [sp, #4]
	str r0, [sp, #4]
	ldr r0, [sp, #4]
	str r0, [sp]
	b .label_ret
.label_ret:
	ldr r0, [sp]
	add sp, sp ,#0
	mov pc, lr
.Lfunc_end:
	.size	
	.fnend
	.globl	@main
	.type	@main,%function
	.code	32
@main:

	.fnstart
.label_entry:
	sub sp, sp ,#8
	ldr r0, .ZYNB1
	mov r0, #10
	str r0, [r0]
	str r0, [r0]
	ldr r0, .ZYNB1
	ldr r0, [r0]
	str r0, [sp, #4]
	ldr r0, [sp, #4]
	str r0, [sp, #4]
	b .label_ret
.label_ret:
	ldr r0, [sp, #4]
	add sp, sp ,#0
	mov pc, lr
.ZYNB1
	.long 
.Lfunc_end:
	.size	
	.fnend
